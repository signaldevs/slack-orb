description: Notifies Slack of an E2E workflow failure.
steps:
  - run:
      name: JQ install
      command: |
              InstallJq() {
                set -x
                if uname -a | grep Darwin > /dev/null 2>&1; then
                echo "Checking For JQ + CURL: MacOS"
                command -v jq >/dev/null 2>&1 || HOMEBREW_NO_AUTO_UPDATE=1 brew install jq --quiet
                return $?

                elif cat /etc/issue | grep Debian > /dev/null 2>&1 || cat /etc/issue | grep Ubuntu > /dev/null 2>&1; then
                echo "Checking For JQ + CURL: Debian"
                if [ "$(id -u)" = 0 ]; then export SUDO=""; else # Check if we're root
                    export SUDO="sudo";
                fi
                command -v jq >/dev/null 2>&1 || { $SUDO apt -qq update && $SUDO apt -qq install -y jq; }
                return $?

                elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then
                echo "Checking For JQ + CURL: Alpine"
                command -v curl >/dev/null 2>&1 || { echo >&2 "SLACK ORB ERROR: CURL is required. Please install."; exit 1; }
                command -v jq >/dev/null 2>&1 || { echo >&2 "SLACK ORB ERROR: JQ is required. Please install"; exit 1; }
                return $?
                fi
              }
              InstallJq
      when: on_fail
  - run:
      when: on_fail
      name: Get workflow name
      command: |
        echo 'export CIRCLE_WORKFLOW_NAME=$(curl \
          -H "Content-Type: application/json" \
          -H "Circle-Token: $CIRCLE_API_TOKEN" \
          https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID | jq -r ".name")' >> $BASH_ENV
  - run:
      when: on_fail
      name: Pull artifacts
      command: |
         echo TEST=$(curl -H 'Content-Type: application/json' -H "Circle-Token: $CIRCLE_API_TOKEN" https://circleci.com/api/v2/project/github/signaldevs/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM/artifacts | jq -r ".items" >> $BASH_ENV)
#        echo 'export CIRCLE_ARTIFACTS=$(curl \
#          -H "Content-Type: application/json" \
#          -H "Circle-Token: $CIRCLE_API_TOKEN" \
#          https://circleci.com/api/v2/project/github/signaldevs/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM/artifacts | jq -r ".items")' >> $BASH_ENV
  - slack/notify:
      event: fail
      template: FAILED_E2E_BUILD_TEMPLATE
  # TODO: Add the URL and env var name as a parameter to make this a generic command
  - run:
      when: on_fail
      name: Load Slack template
      command: |
        curl https://cdn.signalapis.com/slack-templates/failed-e2e-build-template.json -o ~/tmp/templates/failed-e2e-build-template.json --create-dirs && \
        echo 'export FAILED_E2E_BUILD_TEMPLATE=$(cat ~/tmp/templates/failed-e2e-build-template.json)' >> $BASH_ENV
  - slack/notify:
      event: fail
      template: FAILED_E2E_BUILD_TEMPLATE
